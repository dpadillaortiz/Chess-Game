Documenting chess-text
1. Downloaded GitHub
2. Created description for my file
3. Created a file `touch text-based-chess.py` 
4. Installed python3 `brew install python3`
5. Opened the created file in vim `vim text-based-chess.py`
6. Looked through some VIM commands
7. Created a brain storm text file w/vim `:w project_brainstorm.txt`
8. Trying to figure out how to “draw” the chess board using lists with nested tuples or dictionary
9. Tried to use classes and all the advanced stuff but I said fuck it and just start programming with what I know
10. Now I’m just confused lol
11. Okay I got the class working but now the pawnTest.movePawn gives me an error with the arguments. 
    - Within the class I forgot to add the self argument in movePawn
--------
9/30
I was able to start understanding how to use the classes and inheretance
I've created a superclass called ChessPiece and subclasses Pawn and Rook 
I'll be adding another property to the super class that will check if the piece is on the board
Creating the proper movement for the Rook was a challenge. Originally I thought I could use and OR statement with the two conditionals but that did not result in the desired output so I switched dit to what I had now. The current method also gave me issues but it was due to a typo where I typed `self.axis` instead of `self.xaxis` or `self.yaxis`. I'm not sure if I had that type before but that could have been the issue with the OR statement
I added self.cord() to the Rook and Pawn movements to help with the test code  